/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventana;

import controlador.ControladorVentanaAdministrador;
import excepciones.ExcepcionClienteDuplicado;
import excepciones.ExcepcionConcursoDuplicado;
import excepciones.ExcepcionCorreoDuplicado;
import excepciones.ExcepcionEmpleadoDuplicado;
import java.awt.Color;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Date;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import src.CentroComercial;
import src.Cliente;
import src.Concurso;
import src.Empleado;
import src.Local;
import src.Persona;
import src.Vehiculo;

/**
 *
 * @author Acer
 */
public class VentanaAdministrador extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form VentanaAdministrador
     */
    private LogIn ventanaLogIn;
    private JButton[][] botones;
    private ControladorVentanaAdministrador controlador;
    private DefaultTableModel modeloTablaEmpleado;
    private DefaultTableModel modeloTablaCliente;
    private DefaultTableModel modeloTablaVentas;
    private DefaultTableModel modeloTablaConcurso;
    private DefaultTableModel modeloTablaHistorialConcurso;

    public VentanaAdministrador(LogIn logIn) {
        initComponents();
        setLocationRelativeTo(this);
        this.botones = new JButton[5][4];
        this.ventanaLogIn = logIn;
        this.controlador = new ControladorVentanaAdministrador();
        this.modeloTablaEmpleado = new DefaultTableModel();
        this.modeloTablaCliente = new DefaultTableModel();
        this.modeloTablaVentas = new DefaultTableModel();
        this.modeloTablaConcurso = new DefaultTableModel();
        this.modeloTablaHistorialConcurso = new DefaultTableModel();
        this.txtTipoDeVehiculoCliente.setEnabled(false);
        this.txtPlacaVehiculoCliente.setEnabled(false);
        this.txtTipoDeVehiculoEmpleado.setEnabled(false);
        this.txtPlacaVehiculoEmpleado.setEnabled(false);
        this.txtCodigoConcurso.setEnabled(false);
        initBotones();
        validarPosiciones();
        limpiarTablaCliente();
        limpiarTablaEmpleados();
        limpiarTablaVentas();
        limpiarTablaConcurso();
        limpiarTablaConcursoHistorial();
        cargarCliente();
        cargarTablaEmpleados();
        cargarTablaVentas();
        cargarTablaConcurso();
        cargarTablaConcursoHistorial();
        mouseTableCliente();
        mouseTablEmpleado();
        mouseTableConcurso();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabelLocales = new javax.swing.JLabel();
        jLabelEmpleados = new javax.swing.JLabel();
        jLabelClientes = new javax.swing.JLabel();
        jLabelConcursos = new javax.swing.JLabel();
        jLabelVentas = new javax.swing.JLabel();
        jLabelSolicitudes = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabelRegistrar2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabelRegistrar1 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        btnRegistrarEmpleado = new javax.swing.JButton();
        txtTelefonoEmpleado = new javax.swing.JTextField();
        txtEdadEmpleado = new javax.swing.JTextField();
        txtCedulaEmpleado = new javax.swing.JTextField();
        txtCorreoEmpleado = new javax.swing.JTextField();
        txtContrasenaEmpleado = new javax.swing.JPasswordField();
        checkVehiculoEmpleado = new java.awt.Checkbox();
        txtPlacaVehiculoEmpleado = new javax.swing.JTextField();
        txtTipoDeVehiculoEmpleado = new javax.swing.JTextField();
        txtNombreEmpleado = new javax.swing.JTextField();
        jComboBoxEmpleado = new javax.swing.JComboBox<>();
        btnModificarEmpleado = new javax.swing.JButton();
        btnEliminarEmpleado = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableEmpleados = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabelRegistrar3 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        btnRegistrarCliente = new javax.swing.JButton();
        txtTelefonoCliente = new javax.swing.JTextField();
        txtEdadCliente = new javax.swing.JTextField();
        txtCedulaCliente = new javax.swing.JTextField();
        txtCorreoCliente = new javax.swing.JTextField();
        txtContrasenaCliente = new javax.swing.JPasswordField();
        checkVehiculoCliente = new java.awt.Checkbox();
        txtPlacaVehiculoCliente = new javax.swing.JTextField();
        txtTipoDeVehiculoCliente = new javax.swing.JTextField();
        txtNombreCliente = new javax.swing.JTextField();
        btnModificarCliente = new javax.swing.JButton();
        btnEliminarCliente = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableClientes = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabelRegistrar4 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableVentas = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabelRegistrar5 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableConcurso = new javax.swing.JTable();
        jPanel16 = new javax.swing.JPanel();
        btnRegistrarConcurso = new javax.swing.JButton();
        txtPremioConcurso = new javax.swing.JTextField();
        txtValorMinimoConcurso = new javax.swing.JTextField();
        checkConcurso = new java.awt.Checkbox();
        txtNombreConcurso = new javax.swing.JTextField();
        btnModificarConcurso = new javax.swing.JButton();
        btnEliminarConcurso = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtCodigoConcurso = new javax.swing.JTextField();
        btnRegistrarConcurso1 = new javax.swing.JButton();
        jDateChooserConcursoIni = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jDateChooserConcursoFin = new com.toedter.calendar.JDateChooser();
        jPanel17 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableConcursoHistorial = new javax.swing.JTable();
        jPanel18 = new javax.swing.JPanel();
        txtNombreGanadorConcurso = new javax.swing.JTextField();
        txtCodigoGanadorConcurso = new javax.swing.JTextField();
        txtCedulaGanadorConcurso = new javax.swing.JTextField();
        txtNombrePremioConcurso = new javax.swing.JTextField();
        txtNombreConcurso1 = new javax.swing.JTextField();
        btnRegistrarGanadorDeConcurso = new javax.swing.JButton();
        btnModificarGanadorDeConcurso = new javax.swing.JButton();
        btnEliminarGanadorDeConcurso = new javax.swing.JButton();
        btnRegistrarDatosGanadorDeConcurso = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabelRegistrar6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Administrador");
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setForeground(new java.awt.Color(153, 153, 153));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setText("ADMINISTRADOR");

        jLabelLocales.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabelLocales.setForeground(new java.awt.Color(51, 153, 255));
        jLabelLocales.setText("Locales");
        jLabelLocales.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelLocales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelLocalesMouseClicked(evt);
            }
        });

        jLabelEmpleados.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabelEmpleados.setForeground(new java.awt.Color(51, 153, 255));
        jLabelEmpleados.setText("Empleados");
        jLabelEmpleados.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelEmpleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelEmpleadosMouseClicked(evt);
            }
        });

        jLabelClientes.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabelClientes.setForeground(new java.awt.Color(51, 153, 255));
        jLabelClientes.setText("Clientes");
        jLabelClientes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelClientesMouseClicked(evt);
            }
        });

        jLabelConcursos.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabelConcursos.setForeground(new java.awt.Color(51, 153, 255));
        jLabelConcursos.setText("Ventas");
        jLabelConcursos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelConcursos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelConcursosMouseClicked(evt);
            }
        });

        jLabelVentas.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabelVentas.setForeground(new java.awt.Color(51, 153, 255));
        jLabelVentas.setText("Concursos");
        jLabelVentas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelVentas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelVentasMouseClicked(evt);
            }
        });

        jLabelSolicitudes.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabelSolicitudes.setForeground(new java.awt.Color(51, 153, 255));
        jLabelSolicitudes.setText("Solicitudes");
        jLabelSolicitudes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelSolicitudes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelSolicitudesMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabelEmpleados)
                    .addComponent(jLabelLocales)
                    .addComponent(jLabelClientes)
                    .addComponent(jLabelVentas)
                    .addComponent(jLabelConcursos)
                    .addComponent(jLabelSolicitudes))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel2)
                .addGap(85, 85, 85)
                .addComponent(jLabelLocales)
                .addGap(18, 18, 18)
                .addComponent(jLabelEmpleados)
                .addGap(18, 18, 18)
                .addComponent(jLabelClientes)
                .addGap(18, 18, 18)
                .addComponent(jLabelConcursos)
                .addGap(18, 18, 18)
                .addComponent(jLabelVentas)
                .addGap(18, 18, 18)
                .addComponent(jLabelSolicitudes)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setText("¿Deseas salir de la cuenta?");

        jLabelRegistrar2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabelRegistrar2.setForeground(new java.awt.Color(51, 153, 255));
        jLabelRegistrar2.setText("Salir");
        jLabelRegistrar2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelRegistrar2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelRegistrar2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(516, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelRegistrar2)
                .addGap(14, 14, 14))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(572, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabelRegistrar2))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Locales", jPanel4);

        jLabel3.setText("¿Deseas salir de la cuenta?");

        jLabelRegistrar1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabelRegistrar1.setForeground(new java.awt.Color(51, 153, 255));
        jLabelRegistrar1.setText("Salir");
        jLabelRegistrar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelRegistrar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelRegistrar1MouseClicked(evt);
            }
        });

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "Gestionar empleado"));

        btnRegistrarEmpleado.setText("Registrar");
        btnRegistrarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarEmpleadoActionPerformed(evt);
            }
        });

        txtTelefonoEmpleado.setForeground(new java.awt.Color(153, 153, 153));
        txtTelefonoEmpleado.setText("Numero movil");
        txtTelefonoEmpleado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTelefonoEmpleadoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTelefonoEmpleadoFocusLost(evt);
            }
        });

        txtEdadEmpleado.setForeground(new java.awt.Color(153, 153, 153));
        txtEdadEmpleado.setText("Edad");
        txtEdadEmpleado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEdadEmpleadoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEdadEmpleadoFocusLost(evt);
            }
        });

        txtCedulaEmpleado.setForeground(new java.awt.Color(153, 153, 153));
        txtCedulaEmpleado.setText("Cedula");
        txtCedulaEmpleado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCedulaEmpleadoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCedulaEmpleadoFocusLost(evt);
            }
        });

        txtCorreoEmpleado.setForeground(new java.awt.Color(153, 153, 153));
        txtCorreoEmpleado.setText("Correo");
        txtCorreoEmpleado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCorreoEmpleadoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCorreoEmpleadoFocusLost(evt);
            }
        });

        txtContrasenaEmpleado.setForeground(new java.awt.Color(153, 153, 153));
        txtContrasenaEmpleado.setText("******");
        txtContrasenaEmpleado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtContrasenaEmpleadoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtContrasenaEmpleadoFocusLost(evt);
            }
        });

        checkVehiculoEmpleado.setLabel("¿Tiene Vehiculo?");
        checkVehiculoEmpleado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkVehiculoEmpleadoItemStateChanged(evt);
            }
        });

        txtPlacaVehiculoEmpleado.setForeground(new java.awt.Color(153, 153, 153));
        txtPlacaVehiculoEmpleado.setText("Placa del vehiculo");
        txtPlacaVehiculoEmpleado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPlacaVehiculoEmpleadoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPlacaVehiculoEmpleadoFocusLost(evt);
            }
        });

        txtTipoDeVehiculoEmpleado.setForeground(new java.awt.Color(153, 153, 153));
        txtTipoDeVehiculoEmpleado.setText("Tipo de vehiculo");
        txtTipoDeVehiculoEmpleado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTipoDeVehiculoEmpleadoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTipoDeVehiculoEmpleadoFocusLost(evt);
            }
        });

        txtNombreEmpleado.setForeground(new java.awt.Color(153, 153, 153));
        txtNombreEmpleado.setText("Nombre completo");
        txtNombreEmpleado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNombreEmpleadoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreEmpleadoFocusLost(evt);
            }
        });

        jComboBoxEmpleado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cargo", "Encargado parqueadero" }));

        btnModificarEmpleado.setText("Modificar");
        btnModificarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarEmpleadoActionPerformed(evt);
            }
        });

        btnEliminarEmpleado.setText("Eliminar");
        btnEliminarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarEmpleadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(checkVehiculoEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefonoEmpleado)
                    .addComponent(txtEdadEmpleado)
                    .addComponent(txtCedulaEmpleado, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtCorreoEmpleado)
                    .addComponent(txtContrasenaEmpleado)
                    .addComponent(txtTipoDeVehiculoEmpleado)
                    .addComponent(txtPlacaVehiculoEmpleado)
                    .addComponent(jComboBoxEmpleado, 0, 192, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(btnRegistrarEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificarEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtNombreEmpleado))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(btnEliminarEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtNombreEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCedulaEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCorreoEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtContrasenaEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTelefonoEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEdadEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkVehiculoEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTipoDeVehiculoEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPlacaVehiculoEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnModificarEmpleado)
                    .addComponent(btnRegistrarEmpleado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarEmpleado)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Empleados registrados"));

        jTableEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Correo", "Cedula", "Edad", "Rol"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableEmpleados);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelRegistrar1)
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 41, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabelRegistrar1))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Empleados", jPanel5);

        jLabel5.setText("¿Deseas salir de la cuenta?");

        jLabelRegistrar3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabelRegistrar3.setForeground(new java.awt.Color(51, 153, 255));
        jLabelRegistrar3.setText("Salir");
        jLabelRegistrar3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelRegistrar3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelRegistrar3MouseClicked(evt);
            }
        });

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "Gestionar cliente"));

        btnRegistrarCliente.setText("Registrar");
        btnRegistrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarClienteActionPerformed(evt);
            }
        });

        txtTelefonoCliente.setForeground(new java.awt.Color(153, 153, 153));
        txtTelefonoCliente.setText("Numero movil");
        txtTelefonoCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTelefonoClienteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTelefonoClienteFocusLost(evt);
            }
        });

        txtEdadCliente.setForeground(new java.awt.Color(153, 153, 153));
        txtEdadCliente.setText("Edad");
        txtEdadCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEdadClienteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEdadClienteFocusLost(evt);
            }
        });

        txtCedulaCliente.setForeground(new java.awt.Color(153, 153, 153));
        txtCedulaCliente.setText("Cedula");
        txtCedulaCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCedulaClienteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCedulaClienteFocusLost(evt);
            }
        });

        txtCorreoCliente.setForeground(new java.awt.Color(153, 153, 153));
        txtCorreoCliente.setText("Correo");
        txtCorreoCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCorreoClienteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCorreoClienteFocusLost(evt);
            }
        });

        txtContrasenaCliente.setForeground(new java.awt.Color(153, 153, 153));
        txtContrasenaCliente.setText("******");
        txtContrasenaCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtContrasenaClienteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtContrasenaClienteFocusLost(evt);
            }
        });

        checkVehiculoCliente.setLabel("¿Tiene Vehiculo?");
        checkVehiculoCliente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkVehiculoClienteItemStateChanged(evt);
            }
        });

        txtPlacaVehiculoCliente.setForeground(new java.awt.Color(153, 153, 153));
        txtPlacaVehiculoCliente.setText("Placa del vehiculo");
        txtPlacaVehiculoCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPlacaVehiculoClienteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPlacaVehiculoClienteFocusLost(evt);
            }
        });

        txtTipoDeVehiculoCliente.setForeground(new java.awt.Color(153, 153, 153));
        txtTipoDeVehiculoCliente.setText("Tipo de vehiculo");
        txtTipoDeVehiculoCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTipoDeVehiculoClienteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTipoDeVehiculoClienteFocusLost(evt);
            }
        });

        txtNombreCliente.setForeground(new java.awt.Color(153, 153, 153));
        txtNombreCliente.setText("Nombre completo");
        txtNombreCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNombreClienteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreClienteFocusLost(evt);
            }
        });

        btnModificarCliente.setText("Modificar");
        btnModificarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarClienteActionPerformed(evt);
            }
        });

        btnEliminarCliente.setText("Eliminar");
        btnEliminarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addComponent(txtPlacaVehiculoCliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addComponent(txtTipoDeVehiculoCliente, javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(txtEdadCliente, javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(txtTelefonoCliente, javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(txtContrasenaCliente, javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(txtCorreoCliente, javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(txtCedulaCliente, javax.swing.GroupLayout.Alignment.LEADING))
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addComponent(checkVehiculoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                    .addGap(0, 4, Short.MAX_VALUE)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel11Layout.createSequentialGroup()
                            .addGap(54, 54, 54)
                            .addComponent(btnEliminarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel11Layout.createSequentialGroup()
                            .addComponent(btnRegistrarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnModificarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addComponent(txtNombreCliente))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCedulaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCorreoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtContrasenaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTelefonoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEdadCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkVehiculoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTipoDeVehiculoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPlacaVehiculoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegistrarCliente)
                    .addComponent(btnModificarCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEliminarCliente)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Clientes registrados"));

        jTableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Correo", "Cedula", "Edad", "Multa"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableClientes);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelRegistrar3)
                .addGap(20, 20, 20))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabelRegistrar3))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Clientes", jPanel6);

        jLabel6.setText("¿Deseas salir de la cuenta?");

        jLabelRegistrar4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabelRegistrar4.setForeground(new java.awt.Color(51, 153, 255));
        jLabelRegistrar4.setText("Salir");
        jLabelRegistrar4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelRegistrar4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelRegistrar4MouseClicked(evt);
            }
        });

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));
        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder("Registro de ventas de cada negocio"));

        jTableVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre del negocio", "Administrador", "Cantidad de ventas", "Ingresos generados"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTableVentas);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(516, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelRegistrar4)
                .addGap(14, 14, 14))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(136, 136, 136)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabelRegistrar4))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Ventas", jPanel7);

        jLabel7.setText("¿Deseas salir de la cuenta?");

        jLabelRegistrar5.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabelRegistrar5.setForeground(new java.awt.Color(51, 153, 255));
        jLabelRegistrar5.setText("Salir");
        jLabelRegistrar5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelRegistrar5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelRegistrar5MouseClicked(evt);
            }
        });

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Concursos vigentes"));

        jTableConcurso.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Premio", "valor minimo", "Fecha inicio", "Fecha fin", "Participantes"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTableConcurso);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
        );

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "Gestionar concurso"));
        jPanel16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnRegistrarConcurso.setText("Registrar");
        btnRegistrarConcurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarConcursoActionPerformed(evt);
            }
        });
        jPanel16.add(btnRegistrarConcurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 282, 92, -1));

        txtPremioConcurso.setForeground(new java.awt.Color(153, 153, 153));
        txtPremioConcurso.setText("Premio concurso");
        txtPremioConcurso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPremioConcursoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPremioConcursoFocusLost(evt);
            }
        });
        jPanel16.add(txtPremioConcurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 84, 190, -1));

        txtValorMinimoConcurso.setForeground(new java.awt.Color(153, 153, 153));
        txtValorMinimoConcurso.setText("Valor minimo para participar");
        txtValorMinimoConcurso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtValorMinimoConcursoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtValorMinimoConcursoFocusLost(evt);
            }
        });
        jPanel16.add(txtValorMinimoConcurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 114, 190, -1));

        checkConcurso.setLabel("¿Vigente?");
        jPanel16.add(checkConcurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 252, -1, -1));

        txtNombreConcurso.setForeground(new java.awt.Color(153, 153, 153));
        txtNombreConcurso.setText("Nombre concurso");
        txtNombreConcurso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNombreConcursoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreConcursoFocusLost(evt);
            }
        });
        jPanel16.add(txtNombreConcurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 54, 190, -1));

        btnModificarConcurso.setText("Modificar");
        btnModificarConcurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarConcursoActionPerformed(evt);
            }
        });
        jPanel16.add(btnModificarConcurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 282, 92, -1));

        btnEliminarConcurso.setText("Eliminar");
        btnEliminarConcurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarConcursoActionPerformed(evt);
            }
        });
        jPanel16.add(btnEliminarConcurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 312, 92, -1));

        jLabel1.setText("Fecha inicio:");
        jPanel16.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 144, -1, -1));

        jLabel9.setText("Fecha de finalizacion:");
        jPanel16.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 196, -1, -1));

        txtCodigoConcurso.setForeground(new java.awt.Color(153, 153, 153));
        txtCodigoConcurso.setText("Codigo concurso");
        jPanel16.add(txtCodigoConcurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 24, 190, -1));

        btnRegistrarConcurso1.setText("Limpiar datos");
        btnRegistrarConcurso1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarConcurso1ActionPerformed(evt);
            }
        });
        jPanel16.add(btnRegistrarConcurso1, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 312, 92, -1));
        jPanel16.add(jDateChooserConcursoIni, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 180, -1));
        jPanel16.add(jDateChooser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 180, -1));
        jPanel16.add(jDateChooserConcursoFin, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 180, -1));

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));
        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder("Historial de concursos"));

        jTableConcursoHistorial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Premio", "valor minimo", "Fecha inicio", "Fecha fin", "Participantes", "Ganador"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTableConcursoHistorial);
        if (jTableConcursoHistorial.getColumnModel().getColumnCount() > 0) {
            jTableConcursoHistorial.getColumnModel().getColumn(0).setResizable(false);
            jTableConcursoHistorial.getColumnModel().getColumn(1).setResizable(false);
            jTableConcursoHistorial.getColumnModel().getColumn(2).setResizable(false);
            jTableConcursoHistorial.getColumnModel().getColumn(3).setResizable(false);
            jTableConcursoHistorial.getColumnModel().getColumn(4).setResizable(false);
            jTableConcursoHistorial.getColumnModel().getColumn(5).setResizable(false);
            jTableConcursoHistorial.getColumnModel().getColumn(6).setResizable(false);
            jTableConcursoHistorial.getColumnModel().getColumn(7).setResizable(false);
        }

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
        );

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));
        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder("Informacion del ganador"));

        txtNombreGanadorConcurso.setForeground(new java.awt.Color(153, 153, 153));
        txtNombreGanadorConcurso.setText("Nombre ganador");
        txtNombreGanadorConcurso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNombreGanadorConcursoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreGanadorConcursoFocusLost(evt);
            }
        });

        txtCodigoGanadorConcurso.setForeground(new java.awt.Color(153, 153, 153));
        txtCodigoGanadorConcurso.setText("Codigo concurso");
        txtCodigoGanadorConcurso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCodigoGanadorConcursoFocusGained(evt);
            }
        });

        txtCedulaGanadorConcurso.setForeground(new java.awt.Color(153, 153, 153));
        txtCedulaGanadorConcurso.setText("Cedula del ganador");
        txtCedulaGanadorConcurso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCedulaGanadorConcursoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCedulaGanadorConcursoFocusLost(evt);
            }
        });

        txtNombrePremioConcurso.setForeground(new java.awt.Color(153, 153, 153));
        txtNombrePremioConcurso.setText("Premio concurso");
        txtNombrePremioConcurso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNombrePremioConcursoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombrePremioConcursoFocusLost(evt);
            }
        });

        txtNombreConcurso1.setForeground(new java.awt.Color(153, 153, 153));
        txtNombreConcurso1.setText("Usuario ganador");
        txtNombreConcurso1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNombreConcurso1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreConcurso1FocusLost(evt);
            }
        });

        btnRegistrarGanadorDeConcurso.setText("Registrar");
        btnRegistrarGanadorDeConcurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarGanadorDeConcursoActionPerformed(evt);
            }
        });

        btnModificarGanadorDeConcurso.setText("Modificar");
        btnModificarGanadorDeConcurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarGanadorDeConcursoActionPerformed(evt);
            }
        });

        btnEliminarGanadorDeConcurso.setText("Eliminar");
        btnEliminarGanadorDeConcurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarGanadorDeConcursoActionPerformed(evt);
            }
        });

        btnRegistrarDatosGanadorDeConcurso.setText("Limpiar datos");
        btnRegistrarDatosGanadorDeConcurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarDatosGanadorDeConcursoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtNombreConcurso1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCodigoGanadorConcurso, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCedulaGanadorConcurso)
                    .addComponent(txtNombrePremioConcurso))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombreGanadorConcurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnRegistrarGanadorDeConcurso, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificarGanadorDeConcurso, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegistrarDatosGanadorDeConcurso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarGanadorDeConcurso, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodigoGanadorConcurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombrePremioConcurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNombreGanadorConcurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCedulaGanadorConcurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtNombreConcurso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminarGanadorDeConcurso)
                    .addComponent(btnRegistrarGanadorDeConcurso)
                    .addComponent(btnModificarGanadorDeConcurso)
                    .addComponent(btnRegistrarDatosGanadorDeConcurso))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelRegistrar5)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabelRegistrar5)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Concursos", jPanel8);

        jLabel8.setText("¿Deseas salir de la cuenta?");

        jLabelRegistrar6.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabelRegistrar6.setForeground(new java.awt.Color(51, 153, 255));
        jLabelRegistrar6.setText("Salir");
        jLabelRegistrar6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelRegistrar6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelRegistrar6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(516, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelRegistrar6)
                .addGap(14, 14, 14))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(572, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabelRegistrar6))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Solicitudes", jPanel9);

        jPanel3.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 63, 710, 620));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 718, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelLocalesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelLocalesMouseClicked
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jLabelLocalesMouseClicked

    private void jLabelEmpleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelEmpleadosMouseClicked
        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_jLabelEmpleadosMouseClicked

    private void jLabelClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelClientesMouseClicked
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_jLabelClientesMouseClicked

    private void jLabelConcursosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelConcursosMouseClicked
        jTabbedPane1.setSelectedIndex(3);
    }//GEN-LAST:event_jLabelConcursosMouseClicked

    private void jLabelVentasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelVentasMouseClicked
        jTabbedPane1.setSelectedIndex(4);
    }//GEN-LAST:event_jLabelVentasMouseClicked

    private void jLabelSolicitudesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelSolicitudesMouseClicked
        jTabbedPane1.setSelectedIndex(5);
    }//GEN-LAST:event_jLabelSolicitudesMouseClicked

    private void jLabelRegistrar6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRegistrar6MouseClicked
        ventanaLogIn.reinciarLogIn();
        ventanaLogIn.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabelRegistrar6MouseClicked

    private void btnRegistrarDatosGanadorDeConcursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarDatosGanadorDeConcursoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegistrarDatosGanadorDeConcursoActionPerformed

    private void btnEliminarGanadorDeConcursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarGanadorDeConcursoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarGanadorDeConcursoActionPerformed

    private void btnModificarGanadorDeConcursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarGanadorDeConcursoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnModificarGanadorDeConcursoActionPerformed

    private void btnRegistrarGanadorDeConcursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarGanadorDeConcursoActionPerformed
        int codigoConcurso = Integer.parseInt(txtCodigoGanadorConcurso.getText());
        String cedulaCliente = txtCedulaGanadorConcurso.getText();
        if (txtCedulaGanadorConcurso.getText().equals("") || txtCedulaGanadorConcurso.getText().equals("Cedula del ganador")
                || txtCodigoGanadorConcurso.getText().equals("") || txtCodigoGanadorConcurso.getText().equals("Codigo concurso")) {
            JOptionPane.showMessageDialog(this, "Rellena los campos de datos");
        } else {
            Persona persona = controlador.buscarPorCedula(cedulaCliente);
            Concurso concurso = controlador.buscarPorConcurso(codigoConcurso);
            if (persona == null) {
                JOptionPane.showMessageDialog(this, "No se encuentra ninguna "
                        + "persona con la cedula: " + cedulaCliente + " "
                        + "registrado en el sistema");
            } else {
                if (persona instanceof Cliente) {
                    Cliente cliente = (Cliente) persona;
                    if (concurso == null) {
                        JOptionPane.showMessageDialog(this, "No se encuentra ningun "
                                + "concurso con el codigo: " + codigoConcurso + " "
                                + "registrado en el sistema");
                    } else {
                        concurso.setGanador(cliente);
                        JOptionPane.showMessageDialog(this, "El cliente: " + cliente.getNombre() + " "
                                + "es el ganador del concurso de un/una: " + concurso.getPremioConcurso());
                        limpiarTablaConcursoHistorial();
                        cargarTablaConcursoHistorial();
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "La persona con la "
                            + "cedula: " + cedulaCliente + " no esta registrado "
                            + "como cliente en el sistema");
                }
            }
        }
    }//GEN-LAST:event_btnRegistrarGanadorDeConcursoActionPerformed

    private void txtNombreConcurso1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreConcurso1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreConcurso1FocusLost

    private void txtNombreConcurso1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreConcurso1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreConcurso1FocusGained

    private void txtNombrePremioConcursoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombrePremioConcursoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombrePremioConcursoFocusLost

    private void txtNombrePremioConcursoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombrePremioConcursoFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombrePremioConcursoFocusGained

    private void txtCedulaGanadorConcursoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCedulaGanadorConcursoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCedulaGanadorConcursoFocusLost

    private void txtCedulaGanadorConcursoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCedulaGanadorConcursoFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCedulaGanadorConcursoFocusGained

    private void txtNombreGanadorConcursoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreGanadorConcursoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreGanadorConcursoFocusLost

    private void txtNombreGanadorConcursoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreGanadorConcursoFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreGanadorConcursoFocusGained

    private void btnRegistrarConcurso1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarConcurso1ActionPerformed
        cleanTextFieldConcurso();
    }//GEN-LAST:event_btnRegistrarConcurso1ActionPerformed

    private void btnEliminarConcursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarConcursoActionPerformed
        if (txtCodigoConcurso.getText().equals("") || txtCodigoConcurso.getText().equals("Codigo concurso")) {
            JOptionPane.showMessageDialog(this, "Por favor selecciona el concurso que deseas eliminar.");
        } else {
            int codigo = Integer.parseInt(txtCodigoConcurso.getText());
            if (controlador.eliminarConcurso(codigo)) {
                JOptionPane.showMessageDialog(this, "El concurso con codigo: " + codigo + " fue eliminado correctamente.");
                limpiarTablaConcurso();
                cargarTablaConcurso();
                cleanTextFieldConcurso();
            } else {
                JOptionPane.showMessageDialog(this, "El concurso con codigo: " + codigo + " NO fue eliminado.");
            }
        }
    }//GEN-LAST:event_btnEliminarConcursoActionPerformed

    private void btnModificarConcursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarConcursoActionPerformed
        if (txtNombreConcurso.getText().equals("")
                || txtNombreConcurso.getText().equals("Nombre concurso")
                || txtPremioConcurso.getText().equals("Premio concurso")
                || txtPremioConcurso.getText().equals("")
                || txtValorMinimoConcurso.getText().equals("Valor minimo para participar")
                || txtValorMinimoConcurso.getText().equals("")
                || jDateChooserConcursoFin.getDate() == null
                || jDateChooserConcursoIni.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Por favor rellena todos los datos");
        } else {
            String nombre = txtNombreConcurso.getText();
            String premio = txtPremioConcurso.getText();
            float valorMinimo = Float.parseFloat(txtValorMinimoConcurso.getText());
            Date fechaInicio = jDateChooserConcursoIni.getDate();
            Date fechaFin = jDateChooserConcursoFin.getDate();
            boolean check = checkConcurso.getState();
            Concurso concurso = new Concurso(valorMinimo, check, nombre, premio, fechaInicio, fechaFin);
            if (controlador.modificarConcurso(concurso.getCodigo(), concurso)) {
                JOptionPane.showMessageDialog(this, "El concurso con codigo: " + concurso.getCodigo() + " modificado correctamente.");
                limpiarTablaConcurso();
                cargarTablaConcurso();
                cleanTextFieldConcurso();
            } else {
                JOptionPane.showMessageDialog(this, "El concurso con codigo: " + concurso.getCodigo() + " no fue modificado.");
            }
        }
    }//GEN-LAST:event_btnModificarConcursoActionPerformed

    private void txtNombreConcursoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreConcursoFocusLost
        if (txtNombreConcurso.getText().equals("")) {
            txtNombreConcurso.setText("Nombre concurso");
            txtNombreConcurso.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtNombreConcursoFocusLost

    private void txtNombreConcursoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreConcursoFocusGained
        if (txtNombreConcurso.getText().equals("Nombre concurso")) {
            txtNombreConcurso.setText("");
            txtNombreConcurso.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtNombreConcursoFocusGained

    private void txtValorMinimoConcursoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtValorMinimoConcursoFocusLost
        if (txtValorMinimoConcurso.getText().equals("")) {
            txtValorMinimoConcurso.setText("Valor minimo para participar");
            txtValorMinimoConcurso.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtValorMinimoConcursoFocusLost

    private void txtValorMinimoConcursoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtValorMinimoConcursoFocusGained
        if (txtValorMinimoConcurso.getText().equals("Valor minimo para participar")) {
            txtValorMinimoConcurso.setText("");
            txtValorMinimoConcurso.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtValorMinimoConcursoFocusGained

    private void txtPremioConcursoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPremioConcursoFocusLost
        if (txtPremioConcurso.getText().equals("")) {
            txtPremioConcurso.setText("Premio concurso");
            txtPremioConcurso.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtPremioConcursoFocusLost

    private void txtPremioConcursoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPremioConcursoFocusGained
        if (txtPremioConcurso.getText().equals("Premio concurso")) {
            txtPremioConcurso.setText("");
            txtPremioConcurso.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtPremioConcursoFocusGained

    private void btnRegistrarConcursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarConcursoActionPerformed
        if (txtNombreConcurso.getText().equals("")
                || txtNombreConcurso.getText().equals("Nombre concurso")
                || txtPremioConcurso.getText().equals("Premio concurso")
                || txtPremioConcurso.getText().equals("")
                || txtValorMinimoConcurso.getText().equals("Valor minimo para participar")
                || txtValorMinimoConcurso.getText().equals("")
                || jDateChooserConcursoFin.getDate() == null
                || jDateChooserConcursoIni.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Por favor rellena todos los datos");
        } else {
            String nombre = txtNombreConcurso.getText();
            String premio = txtPremioConcurso.getText();
            float valorMinimo = Float.parseFloat(txtValorMinimoConcurso.getText());
            Date fechaInicio = jDateChooserConcursoIni.getDate();
            Date fechaFin = jDateChooserConcursoFin.getDate();
            boolean check = checkConcurso.getState();
            Concurso concurso = new Concurso(valorMinimo, check, nombre, premio, fechaInicio, fechaFin);
            try {
                if (controlador.anadirConcurso(concurso)) {
                    JOptionPane.showMessageDialog(this, "Concurso llamado: " + concurso.getNombreConcurso() + " fue registrado correctamente");
                    limpiarTablaConcurso();
                    limpiarTablaConcursoHistorial();
                    cargarTablaConcurso();
                    cargarTablaConcursoHistorial();
                    cleanTextFieldConcurso();
                }
            } catch (ExcepcionConcursoDuplicado ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnRegistrarConcursoActionPerformed

    private void jLabelRegistrar5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRegistrar5MouseClicked
        ventanaLogIn.reinciarLogIn();
        ventanaLogIn.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabelRegistrar5MouseClicked

    private void jLabelRegistrar4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRegistrar4MouseClicked
        ventanaLogIn.reinciarLogIn();
        ventanaLogIn.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabelRegistrar4MouseClicked

    private void btnEliminarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarClienteActionPerformed
        if (txtCedulaCliente.getText().equals("") || txtCedulaCliente.getText().equals("Cedula")) {
            JOptionPane.showMessageDialog(this, "Por favor rellena el campo de cedula para eliminar el empleado");
        } else {
            String cedula = txtCedulaCliente.getText();
            if (controlador.eliminarCliente(cedula)) {
                JOptionPane.showMessageDialog(this, "El cliente con cedula: " + cedula + " fue eliminado correctamente.");
                limpiarTablaCliente();
                cargarCliente();
                cleanTextFieldCliente();
            } else {
                JOptionPane.showMessageDialog(this, "El cliente con cedula: " + cedula + " NO fue eliminado.");
            }
        }
    }//GEN-LAST:event_btnEliminarClienteActionPerformed

    private void btnModificarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarClienteActionPerformed
        if (txtCorreoCliente.getText().equals("") || txtCorreoCliente.getText().equals("Correo")
                || String.valueOf(txtContrasenaCliente.getPassword()).equals("")
                || String.valueOf(txtContrasenaCliente.getPassword()).equals("******")
                || txtCedulaCliente.getText().equals("") || txtCedulaCliente.getText().equals("Cedula")
                || txtEdadCliente.getText().equals("") || txtEdadCliente.getText().equals("Edad")
                || txtNombreCliente.getText().equals("") || txtNombreCliente.getText().equals("Nombre completo")
                || txtTelefonoCliente.getText().equals("") || txtTelefonoCliente.getText().equals("Numero movil")) {
            JOptionPane.showMessageDialog(this, "Por favor rellena todos los datos");
        } else {
            String telefono = txtTelefonoCliente.getText();
            String nombre = txtNombreCliente.getText();
            short edad = Short.parseShort(txtEdadCliente.getText());
            String cedula = txtCedulaCliente.getText();
            String correo = txtCorreoCliente.getText();
            String contrasena = String.valueOf(txtContrasenaCliente.getPassword());
            Vehiculo vehiculo = vehiculo1();
            Cliente cliente = new Cliente(vehiculo, nombre, cedula, telefono, correo, contrasena, edad);
            if (controlador.modificarCliente(cedula, cliente)) {
                JOptionPane.showMessageDialog(this, "El cliente con cedula: " + cedula + " modificado correctamente");
                limpiarTablaCliente();
                cargarCliente();
                cleanTextFieldCliente();
            } else {
                JOptionPane.showMessageDialog(this, "El cliente con cedula: " + cedula + " no fue modificado debido a que hay un usuario con esos datos");
            }
        }
    }//GEN-LAST:event_btnModificarClienteActionPerformed

    private void txtNombreClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreClienteFocusLost
        if (txtNombreCliente.getText().equals("")) {
            txtNombreCliente.setText("Nombre completo");
            txtNombreCliente.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtNombreClienteFocusLost

    private void txtNombreClienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreClienteFocusGained
        if (txtNombreCliente.getText().equals("Nombre completo")) {
            txtNombreCliente.setText("");
            txtNombreCliente.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtNombreClienteFocusGained

    private void txtTipoDeVehiculoClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTipoDeVehiculoClienteFocusLost
        if (txtTipoDeVehiculoCliente.getText().equals("")) {
            txtTipoDeVehiculoCliente.setText("Tipo de vehiculo");
            txtTipoDeVehiculoCliente.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtTipoDeVehiculoClienteFocusLost

    private void txtTipoDeVehiculoClienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTipoDeVehiculoClienteFocusGained
        if (txtTipoDeVehiculoCliente.getText().equals("Tipo de vehiculo")) {
            txtTipoDeVehiculoCliente.setText("");
            txtTipoDeVehiculoCliente.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtTipoDeVehiculoClienteFocusGained

    private void txtPlacaVehiculoClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPlacaVehiculoClienteFocusLost
        if (txtPlacaVehiculoCliente.getText().equals("")) {
            txtPlacaVehiculoCliente.setText("Placa del vehiculo");
            txtPlacaVehiculoCliente.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtPlacaVehiculoClienteFocusLost

    private void txtPlacaVehiculoClienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPlacaVehiculoClienteFocusGained
        if (txtPlacaVehiculoCliente.getText().equals("Placa del vehiculo")) {
            txtPlacaVehiculoCliente.setText("");
            txtPlacaVehiculoCliente.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtPlacaVehiculoClienteFocusGained

    private void checkVehiculoClienteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkVehiculoClienteItemStateChanged
        if (checkVehiculoCliente.getState()) {
            txtTipoDeVehiculoCliente.setEnabled(true);
            txtPlacaVehiculoCliente.setEnabled(true);
        } else {
            txtTipoDeVehiculoCliente.setEnabled(false);
            txtPlacaVehiculoCliente.setEnabled(false);
            txtTipoDeVehiculoCliente.setText("Tipo de vehiculo");
            txtTipoDeVehiculoCliente.setForeground(Color.gray);
            txtPlacaVehiculoCliente.setText("Placa del vehiculo");
            txtPlacaVehiculoCliente.setForeground(Color.gray);
        }
    }//GEN-LAST:event_checkVehiculoClienteItemStateChanged

    private void txtContrasenaClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtContrasenaClienteFocusLost
        if (String.valueOf(txtContrasenaEmpleado.getPassword()).equals("")) {
            txtContrasenaCliente.setText("******");
            txtContrasenaCliente.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtContrasenaClienteFocusLost

    private void txtContrasenaClienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtContrasenaClienteFocusGained
        if (String.valueOf(txtContrasenaEmpleado.getPassword()).equals("******")) {
            txtContrasenaCliente.setText("");
            txtContrasenaCliente.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtContrasenaClienteFocusGained

    private void txtCorreoClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCorreoClienteFocusLost
        if (txtCorreoCliente.getText().equals("")) {
            txtCorreoCliente.setText("Correo");
            txtCorreoCliente.setForeground(Color.gray);

        }
    }//GEN-LAST:event_txtCorreoClienteFocusLost

    private void txtCorreoClienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCorreoClienteFocusGained
        if (txtCorreoCliente.getText().equals("Correo")) {
            txtCorreoCliente.setText("");
            txtCorreoCliente.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtCorreoClienteFocusGained

    private void txtCedulaClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCedulaClienteFocusLost
        if (txtCedulaCliente.getText().equals("")) {
            txtCedulaCliente.setText("Cedula");
            txtCedulaCliente.setForeground(Color.gray);
        }
        if (!validarNumeros(txtCedulaCliente.getText()) && !txtCedulaEmpleado.getText().equals("Cedula")) {
            txtCedulaCliente.setBackground(Color.red);
        } else {
            txtCedulaCliente.setBackground(Color.white);
        }
    }//GEN-LAST:event_txtCedulaClienteFocusLost

    private void txtCedulaClienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCedulaClienteFocusGained
        if (txtCedulaCliente.getText().equals("Cedula")) {
            txtCedulaCliente.setText("");
            txtCedulaCliente.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtCedulaClienteFocusGained

    private void txtEdadClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEdadClienteFocusLost
        if (txtEdadCliente.getText().equals("")) {
            txtEdadCliente.setText("Edad");
            txtEdadCliente.setForeground(Color.gray);
        }
        if (!validarNumeros(txtEdadCliente.getText()) && !txtEdadCliente.getText().equals("Edad")) {
            txtEdadCliente.setBackground(Color.red);
        } else {
            txtEdadCliente.setBackground(Color.white);
        }
    }//GEN-LAST:event_txtEdadClienteFocusLost

    private void txtEdadClienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEdadClienteFocusGained
        if (txtEdadCliente.getText().equals("Edad")) {
            txtEdadCliente.setText("");
            txtEdadCliente.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtEdadClienteFocusGained

    private void txtTelefonoClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefonoClienteFocusLost
        if (txtTelefonoCliente.getText().equals("")) {
            txtTelefonoCliente.setText("Numero movil");
            txtTelefonoCliente.setForeground(Color.gray);
        }
        if (!validarNumeros(txtTelefonoCliente.getText()) && !txtTelefonoCliente.getText().equals("Numero movil")) {
            txtTelefonoCliente.setBackground(Color.red);
        } else {
            txtTelefonoCliente.setBackground(Color.white);
        }
    }//GEN-LAST:event_txtTelefonoClienteFocusLost

    private void txtTelefonoClienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefonoClienteFocusGained
        if (txtTelefonoCliente.getText().equals("Numero movil")) {
            txtTelefonoCliente.setText("");
            txtTelefonoCliente.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtTelefonoClienteFocusGained

    private void btnRegistrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarClienteActionPerformed
        if (txtCorreoCliente.getText().equals("") || txtCorreoCliente.getText().equals("Correo")
                || String.valueOf(txtContrasenaCliente.getPassword()).equals("")
                || String.valueOf(txtContrasenaCliente.getPassword()).equals("******")
                || txtCedulaCliente.getText().equals("") || txtCedulaCliente.getText().equals("Cedula")
                || txtEdadCliente.getText().equals("") || txtEdadCliente.getText().equals("Edad")
                || txtNombreCliente.getText().equals("") || txtNombreCliente.getText().equals("Nombre completo")
                || txtTelefonoCliente.getText().equals("") || txtTelefonoCliente.getText().equals("Numero movil")) {
            JOptionPane.showMessageDialog(this, "Por favor rellena todos los datos");
        } else {
            String telefono = txtTelefonoCliente.getText();
            String nombre = txtNombreCliente.getText();
            short edad = Short.parseShort(txtEdadCliente.getText());
            String cedula = txtCedulaCliente.getText();
            String correo = txtCorreoCliente.getText();
            String contrasena = String.valueOf(txtContrasenaCliente.getPassword());
            Vehiculo vehiculo = vehiculo1();
            Cliente cliente = new Cliente(vehiculo, nombre, cedula, telefono, correo, contrasena, edad);
            try {
                if (controlador.anadirCliente(cliente)) {
                    JOptionPane.showMessageDialog(this, "Registrado correctamente");
                    limpiarTablaCliente();
                    cargarCliente();
                    cleanTextFieldCliente();
                }
            } catch (ExcepcionClienteDuplicado | ExcepcionCorreoDuplicado ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnRegistrarClienteActionPerformed

    private void jLabelRegistrar3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRegistrar3MouseClicked
        ventanaLogIn.reinciarLogIn();
        ventanaLogIn.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabelRegistrar3MouseClicked

    private void btnEliminarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarEmpleadoActionPerformed
        if (txtCedulaEmpleado.getText().equals("") || txtCedulaEmpleado.getText().equals("Cedula")) {
            JOptionPane.showMessageDialog(this, "Por favor rellena el campo de cedula para eliminar el empleado");
        } else {
            String cedula = txtCedulaEmpleado.getText();
            if (controlador.eliminarEmpleadoCentroComercial(cedula)) {
                JOptionPane.showMessageDialog(this, "El empleado con cedula: " + cedula + " fue eliminado correctamente.");
                limpiarTablaEmpleados();
                cargarTablaEmpleados();
                cleanTextFieldEmpleado();
            } else {
                JOptionPane.showMessageDialog(this, "El empleado con cedula: " + cedula + " NO fue eliminado.");
            }
        }
    }//GEN-LAST:event_btnEliminarEmpleadoActionPerformed

    private void btnModificarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarEmpleadoActionPerformed
        if (txtCorreoEmpleado.getText().equals("") || txtCorreoEmpleado.getText().equals("Correo")
                || String.valueOf(txtContrasenaEmpleado.getPassword()).equals("")
                || String.valueOf(txtContrasenaEmpleado.getPassword()).equals("******")
                || txtCedulaEmpleado.getText().equals("") || txtCedulaEmpleado.getText().equals("Cedula")
                || txtEdadEmpleado.getText().equals("") || txtEdadEmpleado.getText().equals("Edad")
                || txtNombreEmpleado.getText().equals("") || txtNombreEmpleado.getText().equals("Nombre completo")
                || txtTelefonoEmpleado.getText().equals("") || txtTelefonoEmpleado.getText().equals("Numero movil")
                || jComboBoxEmpleado.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Por favor rellena todos los datos");
        } else {
            String rol = String.valueOf(jComboBoxEmpleado.getSelectedItem());
            String telefono = txtTelefonoEmpleado.getText();
            String nombre = txtNombreEmpleado.getText();
            short edad = Short.parseShort(txtEdadEmpleado.getText());
            String cedula = txtCedulaEmpleado.getText();
            String correo = txtCorreoEmpleado.getText();
            String contrasena = String.valueOf(txtContrasenaEmpleado.getPassword());
            Vehiculo vehiculo = vehiculo();
            Empleado empleado = new Empleado(vehiculo, rol, nombre, cedula, telefono, correo, contrasena, edad);
            if (controlador.modificarEmpleadoCentroComercial(cedula, empleado)) {
                JOptionPane.showMessageDialog(this, "El empleado con cedula: " + cedula + " modificado correctamente");
                limpiarTablaEmpleados();
                cargarTablaEmpleados();
                cleanTextFieldEmpleado();
            } else {
                JOptionPane.showMessageDialog(this, "El empleado con cedula: " + cedula + " no fue modificado debido a que hay un usuario con esos datos");
            }
        }
    }//GEN-LAST:event_btnModificarEmpleadoActionPerformed

    private void txtNombreEmpleadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreEmpleadoFocusLost
        if (txtNombreEmpleado.getText().equals("")) {
            txtNombreEmpleado.setText("Nombre completo");
            txtNombreEmpleado.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtNombreEmpleadoFocusLost

    private void txtNombreEmpleadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreEmpleadoFocusGained
        if (txtNombreEmpleado.getText().equals("Nombre completo")) {
            txtNombreEmpleado.setText("");
            txtNombreEmpleado.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtNombreEmpleadoFocusGained

    private void txtTipoDeVehiculoEmpleadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTipoDeVehiculoEmpleadoFocusLost
        if (txtTipoDeVehiculoEmpleado.getText().equals("")) {
            txtTipoDeVehiculoEmpleado.setText("Tipo de vehiculo");
            txtTipoDeVehiculoEmpleado.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtTipoDeVehiculoEmpleadoFocusLost

    private void txtTipoDeVehiculoEmpleadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTipoDeVehiculoEmpleadoFocusGained
        if (txtTipoDeVehiculoEmpleado.getText().equals("Tipo de vehiculo")) {
            txtTipoDeVehiculoEmpleado.setText("");
            txtTipoDeVehiculoEmpleado.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtTipoDeVehiculoEmpleadoFocusGained

    private void txtPlacaVehiculoEmpleadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPlacaVehiculoEmpleadoFocusLost
        if (txtPlacaVehiculoEmpleado.getText().equals("")) {
            txtPlacaVehiculoEmpleado.setText("Placa del vehiculo");
            txtPlacaVehiculoEmpleado.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtPlacaVehiculoEmpleadoFocusLost

    private void txtPlacaVehiculoEmpleadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPlacaVehiculoEmpleadoFocusGained
        if (txtPlacaVehiculoEmpleado.getText().equals("Placa del vehiculo")) {
            txtPlacaVehiculoEmpleado.setText("");
            txtPlacaVehiculoEmpleado.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtPlacaVehiculoEmpleadoFocusGained

    private void checkVehiculoEmpleadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkVehiculoEmpleadoItemStateChanged
        if (checkVehiculoEmpleado.getState()) {
            txtTipoDeVehiculoEmpleado.setEnabled(true);
            txtPlacaVehiculoEmpleado.setEnabled(true);
        } else {
            txtTipoDeVehiculoEmpleado.setEnabled(false);
            txtPlacaVehiculoEmpleado.setEnabled(false);
            txtTipoDeVehiculoEmpleado.setText("Tipo de vehiculo");
            txtTipoDeVehiculoEmpleado.setForeground(Color.gray);
            txtPlacaVehiculoEmpleado.setText("Placa del vehiculo");
            txtPlacaVehiculoEmpleado.setForeground(Color.gray);
        }
    }//GEN-LAST:event_checkVehiculoEmpleadoItemStateChanged

    private void txtContrasenaEmpleadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtContrasenaEmpleadoFocusLost
        if (String.valueOf(txtContrasenaEmpleado.getPassword()).equals("")) {
            txtContrasenaEmpleado.setText("******");
            txtContrasenaEmpleado.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtContrasenaEmpleadoFocusLost

    private void txtContrasenaEmpleadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtContrasenaEmpleadoFocusGained
        if (String.valueOf(txtContrasenaEmpleado.getPassword()).equals("******")) {
            txtContrasenaEmpleado.setText("");
            txtContrasenaEmpleado.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtContrasenaEmpleadoFocusGained

    private void txtCorreoEmpleadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCorreoEmpleadoFocusLost
        if (txtCorreoEmpleado.getText().equals("")) {
            txtCorreoEmpleado.setText("Correo");
            txtCorreoEmpleado.setForeground(Color.gray);

        }
    }//GEN-LAST:event_txtCorreoEmpleadoFocusLost

    private void txtCorreoEmpleadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCorreoEmpleadoFocusGained
        if (txtCorreoEmpleado.getText().equals("Correo")) {
            txtCorreoEmpleado.setText("");
            txtCorreoEmpleado.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtCorreoEmpleadoFocusGained

    private void txtCedulaEmpleadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCedulaEmpleadoFocusLost
        if (txtCedulaEmpleado.getText().equals("")) {
            txtCedulaEmpleado.setText("Cedula");
            txtCedulaEmpleado.setForeground(Color.gray);
        }
        if (!validarNumeros(txtCedulaEmpleado.getText()) && !txtCedulaEmpleado.getText().equals("Cedula")) {
            txtCedulaEmpleado.setBackground(Color.red);
        } else {
            txtCedulaEmpleado.setBackground(Color.white);
        }
    }//GEN-LAST:event_txtCedulaEmpleadoFocusLost

    private void txtCedulaEmpleadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCedulaEmpleadoFocusGained
        if (txtCedulaEmpleado.getText().equals("Cedula")) {
            txtCedulaEmpleado.setText("");
            txtCedulaEmpleado.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtCedulaEmpleadoFocusGained

    private void txtEdadEmpleadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEdadEmpleadoFocusLost
        if (txtEdadEmpleado.getText().equals("")) {
            txtEdadEmpleado.setText("Edad");
            txtEdadEmpleado.setForeground(Color.gray);
        }
        if (!validarNumeros(txtEdadEmpleado.getText()) && !txtEdadEmpleado.getText().equals("Edad")) {
            txtEdadEmpleado.setBackground(Color.red);
        } else {
            txtEdadEmpleado.setBackground(Color.white);
        }
    }//GEN-LAST:event_txtEdadEmpleadoFocusLost

    private void txtEdadEmpleadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEdadEmpleadoFocusGained
        if (txtEdadEmpleado.getText().equals("Edad")) {
            txtEdadEmpleado.setText("");
            txtEdadEmpleado.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtEdadEmpleadoFocusGained

    private void txtTelefonoEmpleadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefonoEmpleadoFocusLost
        if (txtTelefonoEmpleado.getText().equals("")) {
            txtTelefonoEmpleado.setText("Numero movil");
            txtTelefonoEmpleado.setForeground(Color.gray);
        }
        if (!validarNumeros(txtTelefonoEmpleado.getText()) && !txtTelefonoEmpleado.getText().equals("Numero movil")) {
            txtTelefonoEmpleado.setBackground(Color.red);
        } else {
            txtTelefonoEmpleado.setBackground(Color.white);
        }
    }//GEN-LAST:event_txtTelefonoEmpleadoFocusLost

    private void txtTelefonoEmpleadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefonoEmpleadoFocusGained
        if (txtTelefonoEmpleado.getText().equals("Numero movil")) {
            txtTelefonoEmpleado.setText("");
            txtTelefonoEmpleado.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtTelefonoEmpleadoFocusGained

    private void btnRegistrarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarEmpleadoActionPerformed
        if (txtCorreoEmpleado.getText().equals("") || txtCorreoEmpleado.getText().equals("Correo")
                || String.valueOf(txtContrasenaEmpleado.getPassword()).equals("")
                || String.valueOf(txtContrasenaEmpleado.getPassword()).equals("******")
                || txtCedulaEmpleado.getText().equals("") || txtCedulaEmpleado.getText().equals("Cedula")
                || txtEdadEmpleado.getText().equals("") || txtEdadEmpleado.getText().equals("Edad")
                || txtNombreEmpleado.getText().equals("") || txtNombreEmpleado.getText().equals("Nombre completo")
                || txtTelefonoEmpleado.getText().equals("") || txtTelefonoEmpleado.getText().equals("Numero movil")
                || jComboBoxEmpleado.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Por favor rellena todos los datos");
        } else {
            String telefono = txtTelefonoEmpleado.getText();
            String nombre = txtNombreEmpleado.getText();
            short edad = Short.parseShort(txtEdadEmpleado.getText());
            String cedula = txtCedulaEmpleado.getText();
            String correo = txtCorreoEmpleado.getText();
            String contrasena = String.valueOf(txtContrasenaEmpleado.getPassword());
            Vehiculo vehiculo = vehiculo();
            String rol = String.valueOf(jComboBoxEmpleado.getSelectedItem());
            Empleado empleado = new Empleado(vehiculo, rol, nombre, cedula, telefono, correo, contrasena, edad);
            try {
                if (controlador.anadirEmpleadoCentroComercial(empleado)) {
                    JOptionPane.showMessageDialog(this, "Registrado correctamente");
                    limpiarTablaEmpleados();
                    cargarTablaEmpleados();
                    cleanTextFieldEmpleado();
                }
            } catch (ExcepcionEmpleadoDuplicado ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnRegistrarEmpleadoActionPerformed

    private void jLabelRegistrar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRegistrar1MouseClicked
        ventanaLogIn.reinciarLogIn();
        ventanaLogIn.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabelRegistrar1MouseClicked

    private void jLabelRegistrar2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRegistrar2MouseClicked
        ventanaLogIn.reinciarLogIn();
        ventanaLogIn.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabelRegistrar2MouseClicked

    private void txtCodigoGanadorConcursoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodigoGanadorConcursoFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoGanadorConcursoFocusGained

    private void initBotones() {
        int ancho = 90;
        int alto = 90;
        int separado1 = 20;
        int texto = 1;

        for (int i = 0; i < botones.length; i++) {
            for (int j = 0; j < botones[i].length; j++) {
                botones[i][j] = new JButton();
                botones[i][j].setBounds((separado1 * 6) + j * ancho + separado1, (separado1) + i * alto + separado1, ancho, alto);
                botones[i][j].setText(Integer.toString(texto));
                botones[i][j].addActionListener(this);
                jPanel4.add(botones[i][j]);
                texto++;
            }
        }
    }

    public void validarPosiciones() {
        for (int i = 0; i < botones.length; i++) {
            for (int j = 0; j < botones[i].length; j++) {
                Local local = controlador.obtenerLocal(i, j);
                if (local.isDisponible()) {
                    botones[i][j].setBackground(Color.white);
                } else {
                    botones[i][j].setBackground(Color.yellow);
                }
            }
        }
    }

    public Vehiculo vehiculo() {
        Vehiculo vehiculo = null;
        if (checkVehiculoEmpleado.getState()) {
            if (txtPlacaVehiculoEmpleado.getText().equals("Placa del vehiculo") || txtTipoDeVehiculoEmpleado.getText().equals("Tipo de vehiculo")
                    || txtPlacaVehiculoEmpleado.getText().equals("")
                    || txtTipoDeVehiculoEmpleado.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Por favor rellena todos los datos");
            } else {
                String tipoVehiculo = txtTipoDeVehiculoEmpleado.getText();
                String placa = txtPlacaVehiculoEmpleado.getText();
                vehiculo = new Vehiculo(tipoVehiculo, placa);
            }
        }
        return vehiculo;
    }

    public Vehiculo vehiculo1() {
        Vehiculo vehiculo = null;
        if (checkVehiculoCliente.getState()) {
            if (txtPlacaVehiculoCliente.getText().equals("Placa del vehiculo") || txtTipoDeVehiculoCliente.getText().equals("Tipo de vehiculo")
                    || txtPlacaVehiculoCliente.getText().equals("")
                    || txtTipoDeVehiculoCliente.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Por favor rellena todos los datos");
            } else {
                String tipoVehiculo = txtTipoDeVehiculoCliente.getText();
                String placa = txtPlacaVehiculoCliente.getText();
                vehiculo = new Vehiculo(tipoVehiculo, placa);
            }
        }
        return vehiculo;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        for (int i = 0; i < botones.length; i++) {
            for (int j = 0; j < botones[i].length; j++) {
                if (e.getSource().equals(botones[i][j])) {
                    Local local = controlador.obtenerLocal(i, j);
                    if (local.isDisponible()) {
                        VentanaContrato ventanaLocal = new VentanaContrato(this, local);
                        ventanaLocal.setVisible(true);
                        this.dispose();
                    } else {
                        ventanaInfoLocal ventanaInfoLocal = new ventanaInfoLocal(this, local);
                        ventanaInfoLocal.setVisible(true);
                        this.dispose();
                    }
                }
            }
        }
    }

    public static boolean validarNumeros(String datos) {
        return datos.matches("[0-9]*");
    }

    public static boolean validarLetras(String datos) {
        return datos.matches("[a-zA-Z]*");
    }

    public void cargarCliente() {
        if (CentroComercial.personas.Size() != 0) {
            modeloTablaCliente = (DefaultTableModel) jTableClientes.getModel();
            Object[] ob = new Object[5];
            for (int i = 0; i < CentroComercial.personas.Size(); i++) {
                if (!(CentroComercial.personas.obtenerDato(i) instanceof Cliente)) {
                } else {
                    Cliente aux = (Cliente) CentroComercial.personas.obtenerDato(i);
                    ob[0] = aux.getNombre();
                    ob[1] = aux.getCorreo();
                    ob[2] = aux.getCedula();
                    ob[3] = aux.getEdad();
                    ob[4] = aux.isMulta();
                    modeloTablaCliente.addRow(ob);
                }
            }
            jTableClientes.setModel(modeloTablaCliente);
        }
    }

    public void limpiarTablaCliente() {
        for (int i = 0; i < modeloTablaCliente.getRowCount(); i++) {
            modeloTablaCliente.removeRow(i);
            i = i - 1;
        }
    }

    public void cargarTablaEmpleados() {
        if (CentroComercial.personas.Size() != 0) {
            modeloTablaEmpleado = (DefaultTableModel) jTableEmpleados.getModel();
            Object[] ob = new Object[5];
            for (int i = 0; i < CentroComercial.personas.Size(); i++) {
                if (!(CentroComercial.personas.obtenerDato(i) instanceof Empleado)) {
                } else {
                    Empleado aux = (Empleado) CentroComercial.personas.obtenerDato(i);
                    ob[0] = aux.getNombre();
                    ob[1] = aux.getCorreo();
                    ob[2] = aux.getCedula();
                    ob[3] = aux.getEdad();
                    ob[4] = aux.getRol();
                    modeloTablaEmpleado.addRow(ob);
                }
            }
            jTableEmpleados.setModel(modeloTablaEmpleado);
        }
    }

    public void limpiarTablaEmpleados() {
        for (int i = 0; i < modeloTablaEmpleado.getRowCount(); i++) {
            modeloTablaEmpleado.removeRow(i);
            i = i - 1;
        }
    }

    public void cargarTablaVentas() {
        modeloTablaVentas = (DefaultTableModel) jTableVentas.getModel();
        Object[] ob = new Object[4];
        for (Local[] locale : CentroComercial.locales) {
            for (Local locale1 : locale) {
                if (locale1.getNegocio() != null) {
                    ob[0] = locale1.getNegocio().getNombre();
                    ob[1] = locale1.getNegocio().getAdministrador().getNombre();
                    ob[2] = locale1.getNegocio().getVentas().Size();
                    ob[3] = locale1.getNegocio().ingresosGenerados();
                    modeloTablaVentas.addRow(ob);
                }
            }
        }
        jTableVentas.setModel(modeloTablaVentas);
    }

    public void limpiarTablaVentas() {
        for (int i = 0; i < modeloTablaVentas.getRowCount(); i++) {
            modeloTablaVentas.removeRow(i);
            i = i - 1;
        }
    }

    public void cargarTablaConcurso() {
        modeloTablaConcurso = (DefaultTableModel) jTableConcurso.getModel();
        Object[] ob = new Object[7];
        for (int i = 0; i < CentroComercial.concursos.Size(); i++) {
            if (CentroComercial.concursos.obtenerDato(i).isEstado()) {
                ob[0] = CentroComercial.concursos.obtenerDato(i).getCodigo();
                ob[1] = CentroComercial.concursos.obtenerDato(i).getNombreConcurso();
                ob[2] = CentroComercial.concursos.obtenerDato(i).getPremioConcurso();
                ob[3] = CentroComercial.concursos.obtenerDato(i).getValorMinimo();
                ob[4] = CentroComercial.concursos.obtenerDato(i).getFechaIncioConcurso();
                ob[5] = CentroComercial.concursos.obtenerDato(i).getFechaFinConcurso();
                ob[6] = CentroComercial.concursos.obtenerDato(i).getParticipantes().Size();
                modeloTablaConcurso.addRow(ob);
            }
        }
        jTableConcurso.setModel(modeloTablaConcurso);
    }

    public void limpiarTablaConcurso() {
        for (int i = 0; i < modeloTablaConcurso.getRowCount(); i++) {
            modeloTablaConcurso.removeRow(i);
            i = i - 1;
        }
    }

    public void cargarTablaConcursoHistorial() {
        modeloTablaHistorialConcurso = (DefaultTableModel) jTableConcursoHistorial.getModel();
        Object[] ob = new Object[8];
        for (int i = 0; i < CentroComercial.historialConcursos.getConcursos().Size(); i++) {
            if (CentroComercial.historialConcursos.getConcursos().obtenerDato(i).isEstado()) {
                ob[0] = CentroComercial.historialConcursos.getConcursos().obtenerDato(i).getCodigo();
                ob[1] = CentroComercial.historialConcursos.getConcursos().obtenerDato(i).getNombreConcurso();
                ob[2] = CentroComercial.historialConcursos.getConcursos().obtenerDato(i).getPremioConcurso();
                ob[3] = CentroComercial.historialConcursos.getConcursos().obtenerDato(i).getValorMinimo();
                ob[4] = CentroComercial.historialConcursos.getConcursos().obtenerDato(i).getFechaIncioConcurso();
                ob[5] = CentroComercial.historialConcursos.getConcursos().obtenerDato(i).getFechaFinConcurso();
                ob[6] = CentroComercial.historialConcursos.getConcursos().obtenerDato(i).getParticipantes().Size();
                if (CentroComercial.historialConcursos.getConcursos().obtenerDato(i).getGanador() == null) {
                    ob[7] = "";
                } else {
                    ob[7] = CentroComercial.historialConcursos.getConcursos().obtenerDato(i).getGanador().getNombre();
                }
                modeloTablaHistorialConcurso.addRow(ob);
            }
        }
        jTableConcursoHistorial.setModel(modeloTablaHistorialConcurso);
    }

    public void limpiarTablaConcursoHistorial() {
        for (int i = 0; i < modeloTablaHistorialConcurso.getRowCount(); i++) {
            modeloTablaHistorialConcurso.removeRow(i);
            i = i - 1;
        }
    }

    public void cleanTextFieldEmpleado() {
        txtPlacaVehiculoEmpleado.setText("Placa del vehiculo");
        txtPlacaVehiculoEmpleado.setForeground(Color.gray);
        txtTipoDeVehiculoEmpleado.setText("Tipo de vehiculo");
        txtTipoDeVehiculoEmpleado.setForeground(Color.gray);
        txtTelefonoEmpleado.setText("Numero movil");
        txtTelefonoEmpleado.setForeground(Color.gray);
        txtNombreEmpleado.setText("Nombre completo");
        txtNombreEmpleado.setForeground(Color.gray);
        txtEdadEmpleado.setText("Edad");
        txtEdadEmpleado.setForeground(Color.gray);
        txtCedulaEmpleado.setText("Cedula");
        txtCedulaEmpleado.setForeground(Color.gray);
        txtCorreoEmpleado.setText("Correo");
        txtCorreoEmpleado.setForeground(Color.gray);
        txtContrasenaEmpleado.setText("******");
        txtContrasenaEmpleado.setForeground(Color.gray);
        jComboBoxEmpleado.setSelectedIndex(0);
        checkVehiculoEmpleado.setState(false);
        txtTipoDeVehiculoEmpleado.setEnabled(false);
        txtPlacaVehiculoEmpleado.setEnabled(false);
    }

    public void cleanTextFieldCliente() {
        txtTipoDeVehiculoCliente.setText("Tipo de vehiculo");
        txtTipoDeVehiculoCliente.setForeground(Color.gray);
        txtPlacaVehiculoCliente.setText("Placa del vehiculo");
        txtPlacaVehiculoCliente.setForeground(Color.gray);
        txtTelefonoCliente.setText("Numero movil");
        txtTelefonoCliente.setForeground(Color.gray);
        txtNombreCliente.setText("Nombre completo");
        txtNombreCliente.setForeground(Color.gray);
        txtEdadCliente.setText("Edad");
        txtEdadCliente.setForeground(Color.gray);
        txtCedulaCliente.setText("Cedula");
        txtCedulaCliente.setForeground(Color.gray);
        txtCorreoCliente.setText("Correo");
        txtCorreoCliente.setForeground(Color.gray);
        txtContrasenaCliente.setText("******");
        txtContrasenaCliente.setForeground(Color.gray);
        checkVehiculoCliente.setState(false);
    }

    public void cleanTextFieldConcurso() {
        txtCodigoConcurso.setText("Codigo concurso");
        txtCodigoConcurso.setForeground(Color.gray);
        txtNombreConcurso.setText("Nombre concurso");
        txtNombreConcurso.setForeground(Color.gray);
        txtValorMinimoConcurso.setText("Valor minimo para participar");
        txtValorMinimoConcurso.setForeground(Color.gray);
        txtPremioConcurso.setText("Premio concurso");
        txtPremioConcurso.setForeground(Color.gray);
        jDateChooserConcursoIni.setDate(null);
        jDateChooserConcursoFin.setDate(null);
        checkConcurso.setState(false);
    }

    public void mouseTablEmpleado() {
        jTableEmpleados.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent Mouse_evt) {
                JTable table = (JTable) Mouse_evt.getSource();
                Point point = Mouse_evt.getPoint();
                int row = table.rowAtPoint(point);
                if (Mouse_evt.getClickCount() == 1) {
                    txtNombreEmpleado.setText(jTableEmpleados.getValueAt(jTableEmpleados.getSelectedRow(), 0).toString());
                    txtNombreEmpleado.setForeground(Color.black);
                    txtCorreoEmpleado.setText(jTableEmpleados.getValueAt(jTableEmpleados.getSelectedRow(), 1).toString());
                    txtCorreoEmpleado.setForeground(Color.black);
                    txtCedulaEmpleado.setText(jTableEmpleados.getValueAt(jTableEmpleados.getSelectedRow(), 2).toString());
                    txtCedulaEmpleado.setForeground(Color.black);
                    jComboBoxEmpleado.setSelectedItem(jTableEmpleados.getValueAt(jTableEmpleados.getSelectedRow(), 3).toString());
                    Empleado empleado = (Empleado) controlador.buscarPorCedula(txtCedulaEmpleado.getText());
                    txtTelefonoEmpleado.setText(empleado.getNumeroCelular());
                    txtEdadEmpleado.setText(String.valueOf(empleado.getEdad()));
                    txtEdadEmpleado.setForeground(Color.black);
                    txtTelefonoEmpleado.setForeground(Color.black);
                    txtContrasenaEmpleado.setText(empleado.getContrasena());
                    txtContrasenaEmpleado.setForeground(Color.black);
                    if (empleado.getVehiculo() != null) {
                        checkVehiculoEmpleado.setState(true);
                        txtTipoDeVehiculoEmpleado.setEnabled(true);
                        txtPlacaVehiculoEmpleado.setEnabled(true);
                        txtTipoDeVehiculoEmpleado.setText(empleado.getVehiculo().getTipo());
                        txtTipoDeVehiculoEmpleado.setForeground(Color.black);
                        txtPlacaVehiculoEmpleado.setText(empleado.getVehiculo().getPlaca());
                        txtPlacaVehiculoEmpleado.setForeground(Color.black);
                    } else {
                        checkVehiculoEmpleado.setState(false);
                        txtTipoDeVehiculoEmpleado.setEnabled(false);
                        txtPlacaVehiculoEmpleado.setEnabled(false);
                        txtTipoDeVehiculoEmpleado.setText("Tipo de vehiculo");
                        txtTipoDeVehiculoEmpleado.setForeground(Color.gray);
                        txtPlacaVehiculoEmpleado.setText("Placa del vehiculo");
                        txtPlacaVehiculoEmpleado.setForeground(Color.gray);
                    }
                }
            }
        });
    }

    public void mouseTableCliente() {
        jTableClientes.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent Mouse_evt) {
                JTable table = (JTable) Mouse_evt.getSource();
                Point point = Mouse_evt.getPoint();
                int row = table.rowAtPoint(point);
                if (Mouse_evt.getClickCount() == 1) {
                    txtNombreCliente.setText(jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 0).toString());
                    txtNombreCliente.setForeground(Color.black);
                    txtCorreoCliente.setText(jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 1).toString());
                    txtCorreoCliente.setForeground(Color.black);
                    txtCedulaCliente.setText(jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 2).toString());
                    txtCedulaCliente.setForeground(Color.black);
                    Cliente cliente = (Cliente) controlador.buscarPorCedula(txtCedulaCliente.getText());
                    txtTelefonoCliente.setText(cliente.getNumeroCelular());
                    txtEdadCliente.setText(String.valueOf(cliente.getEdad()));
                    txtEdadCliente.setForeground(Color.black);
                    txtTelefonoCliente.setForeground(Color.black);
                    txtContrasenaCliente.setText(cliente.getContrasena());
                    txtContrasenaCliente.setForeground(Color.black);
                    if (cliente.getVehiculo() != null) {
                        checkVehiculoCliente.setState(true);
                        txtTipoDeVehiculoCliente.setEnabled(true);
                        txtPlacaVehiculoCliente.setEnabled(true);
                        txtTipoDeVehiculoCliente.setText(cliente.getVehiculo().getTipo());
                        txtTipoDeVehiculoCliente.setForeground(Color.black);
                        txtPlacaVehiculoCliente.setText(cliente.getVehiculo().getPlaca());
                        txtPlacaVehiculoCliente.setForeground(Color.black);
                    } else {
                        checkVehiculoCliente.setState(false);
                        txtTipoDeVehiculoCliente.setEnabled(false);
                        txtPlacaVehiculoCliente.setEnabled(false);
                        txtTipoDeVehiculoCliente.setText("Tipo de vehiculo");
                        txtTipoDeVehiculoCliente.setForeground(Color.gray);
                        txtPlacaVehiculoCliente.setText("Placa del vehiculo");
                        txtPlacaVehiculoCliente.setForeground(Color.gray);
                    }
                }
            }
        });
    }

    public void mouseTableConcurso() {
        jTableConcurso.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent Mouse_evt) {
                JTable table = (JTable) Mouse_evt.getSource();
                Point point = Mouse_evt.getPoint();
                int row = table.rowAtPoint(point);
                if (Mouse_evt.getClickCount() == 1) {
                    txtCodigoConcurso.setText(jTableConcurso.getValueAt(jTableConcurso.getSelectedRow(), 0).toString());
                    txtCodigoConcurso.setForeground(Color.black);
                    txtNombreConcurso.setText(jTableConcurso.getValueAt(jTableConcurso.getSelectedRow(), 1).toString());
                    txtNombreConcurso.setForeground(Color.black);
                    txtPremioConcurso.setText(jTableConcurso.getValueAt(jTableConcurso.getSelectedRow(), 2).toString());
                    txtPremioConcurso.setForeground(Color.black);
                    txtValorMinimoConcurso.setText(jTableConcurso.getValueAt(jTableConcurso.getSelectedRow(), 3).toString());
                    txtValorMinimoConcurso.setForeground(Color.black);
                    Concurso concurso = controlador.buscarPorConcurso(Integer.parseInt(txtCodigoConcurso.getText()));
                    jDateChooserConcursoIni.setDate(concurso.getFechaIncioConcurso());
                    jDateChooserConcursoFin.setDate(concurso.getFechaFinConcurso());
                    checkConcurso.setState(concurso.isEstado());
                }
            }
        });
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaAdministrador.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaAdministrador.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaAdministrador.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaAdministrador.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminarCliente;
    private javax.swing.JButton btnEliminarConcurso;
    private javax.swing.JButton btnEliminarEmpleado;
    private javax.swing.JButton btnEliminarGanadorDeConcurso;
    private javax.swing.JButton btnModificarCliente;
    private javax.swing.JButton btnModificarConcurso;
    private javax.swing.JButton btnModificarEmpleado;
    private javax.swing.JButton btnModificarGanadorDeConcurso;
    private javax.swing.JButton btnRegistrarCliente;
    private javax.swing.JButton btnRegistrarConcurso;
    private javax.swing.JButton btnRegistrarConcurso1;
    private javax.swing.JButton btnRegistrarDatosGanadorDeConcurso;
    private javax.swing.JButton btnRegistrarEmpleado;
    private javax.swing.JButton btnRegistrarGanadorDeConcurso;
    private java.awt.Checkbox checkConcurso;
    private java.awt.Checkbox checkVehiculoCliente;
    private java.awt.Checkbox checkVehiculoEmpleado;
    private javax.swing.JComboBox<String> jComboBoxEmpleado;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private com.toedter.calendar.JDateChooser jDateChooserConcursoFin;
    private com.toedter.calendar.JDateChooser jDateChooserConcursoIni;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelClientes;
    private javax.swing.JLabel jLabelConcursos;
    private javax.swing.JLabel jLabelEmpleados;
    private javax.swing.JLabel jLabelLocales;
    private javax.swing.JLabel jLabelRegistrar1;
    private javax.swing.JLabel jLabelRegistrar2;
    private javax.swing.JLabel jLabelRegistrar3;
    private javax.swing.JLabel jLabelRegistrar4;
    private javax.swing.JLabel jLabelRegistrar5;
    private javax.swing.JLabel jLabelRegistrar6;
    private javax.swing.JLabel jLabelSolicitudes;
    private javax.swing.JLabel jLabelVentas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableClientes;
    private javax.swing.JTable jTableConcurso;
    private javax.swing.JTable jTableConcursoHistorial;
    private javax.swing.JTable jTableEmpleados;
    private javax.swing.JTable jTableVentas;
    private javax.swing.JTextField txtCedulaCliente;
    private javax.swing.JTextField txtCedulaEmpleado;
    private javax.swing.JTextField txtCedulaGanadorConcurso;
    private javax.swing.JTextField txtCodigoConcurso;
    private javax.swing.JTextField txtCodigoGanadorConcurso;
    private javax.swing.JPasswordField txtContrasenaCliente;
    private javax.swing.JPasswordField txtContrasenaEmpleado;
    private javax.swing.JTextField txtCorreoCliente;
    private javax.swing.JTextField txtCorreoEmpleado;
    private javax.swing.JTextField txtEdadCliente;
    private javax.swing.JTextField txtEdadEmpleado;
    private javax.swing.JTextField txtNombreCliente;
    private javax.swing.JTextField txtNombreConcurso;
    private javax.swing.JTextField txtNombreConcurso1;
    private javax.swing.JTextField txtNombreEmpleado;
    private javax.swing.JTextField txtNombreGanadorConcurso;
    private javax.swing.JTextField txtNombrePremioConcurso;
    private javax.swing.JTextField txtPlacaVehiculoCliente;
    private javax.swing.JTextField txtPlacaVehiculoEmpleado;
    private javax.swing.JTextField txtPremioConcurso;
    private javax.swing.JTextField txtTelefonoCliente;
    private javax.swing.JTextField txtTelefonoEmpleado;
    private javax.swing.JTextField txtTipoDeVehiculoCliente;
    private javax.swing.JTextField txtTipoDeVehiculoEmpleado;
    private javax.swing.JTextField txtValorMinimoConcurso;
    // End of variables declaration//GEN-END:variables
}
